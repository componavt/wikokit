#summary How to map Wiktionary parsed database (MySQL) to RDF database by D2RQ.
#labels d2rq,Phase-Deploy,SPARQL,parser,Jena,Featured

= Introduction =

[http://www4.wiwiss.fu-berlin.de/bizer/d2rq/ D2RQ] platform enables applications to access a RDF-view on a non-RDF database via the SPARQL Protocol.

= Setup =

Create MySQL user and provide access to the parsed Wiktionary database:
{{{
mysql> CREATE USER rdfmapper;
mysql> GRANT SELECT ON ruwikt20101101_parsed.* TO rdfmapper@'%';
mysql> FLUSH PRIVILEGES;
}}}

Download and install [http://www4.wiwiss.fu-berlin.de/bizer/d2rq/ D2RQ].

Generate `.n3` mapping file by the scheme of MySQL database:
{{{
cd C:\w\d2r-server-0.7\
generate-mapping -o mapping-wikt_parsed.n3 -u rdfmapper jdbc:mysql://localhost/ruwikt20101101_parsed
}}}

Change the following lines in the `.n3` mapping file:
  * delete lines with `index_ith.lat.foreign_has_definition` (_temporary_);
  * change `vocab` to `wikpa` (WIktionary PArsed database):
{{{
%s/vocab/wikpa/g
}}}
  * add lines:
{{{
map:Configuration a d2rq:Configuration;
    d2rq:resultSizeLimit 33.
}}}

Run server:
{{{
cd C:\w\d2r-server-0.7\
d2r-server mapping-wikt_parsed.n3
}}}

Open web browser:
{{{
http://localhost:2020
}}}

= SPARQL examples =

== Get definition (meaning) by word and language ==

Let's find all definitions for the English word "dog":

Open URL: http://localhost:2020/snorql/

Paste SPARQL request:
{{{
SELECT ?langId ?pageId ?langPosId ?meaningId ?wikiTextId ?wikiText
WHERE {
    ?lang wikpa:lang_code "en";
          wikpa:lang_id ?langId.

    ?page wikpa:page_page_title "dog";
          wikpa:page_id ?pageId.

    ?lang_pos wikpa:lang_pos_page_id ?pageId;
              wikpa:lang_pos_lang_id ?langId;
              wikpa:lang_pos_id ?langPosId.

    ?meaning wikpa:meaning_id ?meaningId;
             wikpa:meaning_lang_pos_id ?langPosId;
             wikpa:meaning_wiki_text_id ?wikiTextId.

    ?wiki_text wikpa:wiki_text_id ?wikiTextId;
               wikpa:wiki_text_text ?wikiText.
}
}}}

You can access these data from Java code by using [http://en.wikipedia.org/wiki/Jena_%28framework%29 Jena]:
{{{
package wikpasparql;

import com.hp.hpl.jena.query.Query;
import com.hp.hpl.jena.query.QueryExecutionFactory;
import com.hp.hpl.jena.query.QueryFactory;
import com.hp.hpl.jena.query.QuerySolution;
import com.hp.hpl.jena.query.ResultSet;

import de.fuberlin.wiwiss.d2rq.ModelD2RQ;

public class SPARQLExample {

	public static void main(String[] args) {
        ModelD2RQ m = new ModelD2RQ("file:mapping-wikt_parsed.n3");
		
        String sparql = 
            "PREFIX wikpa: <http://localhost:2020/wikpa/resource/>" +
            "SELECT ?langId ?pageId ?wikiText WHERE {" +
            "   ?lang wikpa:lang_code \"en\"; " +
            "         wikpa:lang_id ?langId. " +
            
            "   ?page wikpa:page_page_title \"dog\"; " +
            "         wikpa:page_id ?pageId." +
            
            "   ?lang_pos wikpa:lang_pos_page_id ?pageId; " +
            "         wikpa:lang_pos_lang_id ?langId; " +
            "         wikpa:lang_pos_id ?langPosId. " +

            "   ?meaning wikpa:meaning_lang_pos_id ?langPosId; " +
            "         wikpa:meaning_wiki_text_id ?wikiTextId. " +

            "   ?wiki_text wikpa:wiki_text_id ?wikiTextId; " +
            "         wikpa:wiki_text_text ?wikiText. " +
		    "}";
		
		Query q = QueryFactory.create(sparql); 
		ResultSet rs = QueryExecutionFactory.create(q, m).execSelect();
		while (rs.hasNext()) {
			QuerySolution row = rs.nextSolution();
			System.out.println("langID: " + row.getLiteral("langId").getString());
			System.out.println("pageId: " + row.getLiteral("pageId").getString());
			System.out.println("wikiText: " + row.getLiteral("wikiText").getString());
		}
	}
}
}}}

== Get list of synonyms ==

Todo ...

== Translate word from one language to another ==

Todo ...

= See also =
  * [SQLExamples]