#summary Index table for each language code (search for words speed up in the database).
#labels database,schema,index,Phase-Implementation

= Introduction =

Wiktionary is a multilingual dictionary. But user usually is interested in words in one language. 

*Goal*: fast search of words in one of Wiktionary languages. E.g. search of English words in Russian Wiktionary.

= Definitions =

_Main language_ - native language in the Wiktionary, e.g. Russian language in Russian Wiktionary, or English in English Wiktionary.

= MySQL index tables =

{{{
-- -----------------------------------------------------
-- Table `index_native`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `index_native` ;

CREATE  TABLE IF NOT EXISTS `index_native` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT ,
  `page_title` VARCHAR(255) BINARY NOT NULL COMMENT 'page.page_title of this Wiktionary article in native language' ,
  `has_relation` TINYINT(1) NULL COMMENT 'true, if there is any semantic relation in this Wiktionary article' ,
  PRIMARY KEY (`id`) ,
  UNIQUE INDEX `page_title` (`page_title` ASC) )
ENGINE = InnoDB
COMMENT = 'words in native language, which have meaning (non empty definition)';

-- Example of auto generated tables for each language code.

-- -----------------------------------------------------
-- Table `index_uk` - for direct search of Ukranian words
-- -----------------------------------------------------
DROP TABLE IF EXISTS `index_uk` ;

CREATE  TABLE IF NOT EXISTS `index_uk` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT ,
  `word` VARCHAR(255) BINARY NOT NULL COMMENT 'word (in Language \'uk\') found somewhere in the Wiktionary article' ,
  `page_title` VARCHAR(255) BINARY COMMENT 'page.page_title of this Wiktionary article in native language' ,
  PRIMARY KEY (`id`) ,
  INDEX `word` (`word` ASC) ,
  INDEX `page_title` (`page_title` ASC) )
ENGINE = InnoDB
COMMENT = 'words with this language code (see table postfix)';
}}}

= Cases ==

There are four cases of parsing Wiktionary article. The following INSERT statements should be executed.

1) Word in main (native) language (page_title), e.g. Russian word "вода" in Russian Wiktionary.
  * index_ru.native_page_title = "вода" // Only with a definition
  * index_ru.foreign_word = NULL

!Attention. The word will be stored to the table only if the definition section is not empty.

2) Case with red-links for words in native language.

Word in main (native) language (page_title), e.g. Russian word "вода" in Russian Wiktionary. This Wiktionary article has a red-link word, i.e. absent, e.g. "ходить по воде".
  * index_ru.native_page_title = "вода"
  * index_ru.foreign_word = "ходить по воде" // Exception for table of main language, 'foreign_word' is a red-link (i.e. absent) word in *main* language  

3) Word in foreign language (in the ===Translation=== section), e.g. English word "water" is the translation of Russian "вода" in Russian Wiktionary.
  * index_en.native_page_title = "вода"
  * index_en.foreign_word = "water"

4) Word in foreign language (page_title), e.g. English word "water" in Russian Wiktionary.
  * index_en.native_page_title = NULL
  * index_en.foreign_word = "water" // Only with a definition
  
!Attention. The word will be stored to the table only if the definition section is not empty.